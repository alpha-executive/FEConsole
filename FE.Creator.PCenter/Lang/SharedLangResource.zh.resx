<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FE Home" xml:space="preserve">
    <value>FE平台</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="Welcome &lt;span&gt;{0}&lt;/span&gt;!" xml:space="preserve">
    <value>欢迎{0}!</value>
  </data>
  <data name="Feature" xml:space="preserve">
    <value>特色</value>
  </data>
  <data name="FEConsole" xml:space="preserve">
    <value>FEConsole</value>
  </data>
  <data name="Contact Us" xml:space="preserve">
    <value>联系我们</value>
  </data>
  <data name="Donate" xml:space="preserve">
    <value>捐赠</value>
  </data>
  <data name="The Platform for Creative IT System!!" xml:space="preserve">
    <value>为创新、有趣的IT系统打造的平台</value>
  </data>
  <data name="The FETECH provides individuals and organizations with commercially-free, scalable and easy to use IT Systems like FEConsole that will bring people extra share of all that make them happiest!" xml:space="preserve">
    <value>FETECH为个人和组织机构提供商业免费、功能可扩展、稳定易用的IT系统，比如FEConsole应用系统。相信这些系统一定能为用户的幸福生活增添一笔亮丽的色彩！</value>
  </data>
  <data name="FEConsole Version 1.0 is Now General Available!" xml:space="preserve">
    <value>FEConsole 1.0版本成功发布！</value>
  </data>
  <data name="Download now!" xml:space="preserve">
    <value>即刻下载！</value>
  </data>
  <data name="We use cookies to ensure you get the best experience on our website." xml:space="preserve">
    <value>为了提供最好的体验，我们需要使用您浏览器的Cookie功能。</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>同意</value>
  </data>
  <data name="Live Preview" xml:space="preserve">
    <value>在线体验</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>注销</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>版权所有</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>出错啦</value>
  </data>
  <data name="&lt;strong&gt;Development environment should not be enabled in deployed applications&lt;/strong&gt;, as it can result in sensitive information from exceptions being displayed to end users. For local debugging, development environment can be enabled by setting the &lt;strong&gt;ASPNETCORE_ENVIRONMENT&lt;/strong&gt; environment variable to &lt;strong&gt;Development&lt;/strong&gt;, and restarting the application." xml:space="preserve">
    <value>&lt;strong&gt;应用程序没有发布为开发模式&lt;/strong&gt;, 因为那样会把系统敏感信息暴露给终端，如果是本地调试，请在&lt;strong&gt;开发模式&lt;/strong&gt;中设置 &lt;strong&gt;ASPNETCORE_ENVIRONMENT&lt;/strong&gt;环境变量, 然后重启应用。</value>
  </data>
  <data name="Development Mode" xml:space="preserve">
    <value>开发模式</value>
  </data>
  <data name="error occurred while processing your request." xml:space="preserve">
    <value>系统在处理请求时候出错。</value>
  </data>
  <data name="Swapping to &lt;strong&gt;Development&lt;/strong&gt; environment will display more detailed information about the error that occurred." xml:space="preserve">
    <value>切换到&lt;strong&gt;开发&lt;/strong&gt;环境查看更详细的错误。</value>
  </data>
</root>